API - Project requests
======================

/projects
---------

GET /projects
~~~~~~~~~~~~~

    Receive a collection of projects owned by your company.

|   *Available queries*
|       page
|       items
|       fields
|       exclude
|       orderasc/orderdesc

.. http:response:: Example response body

    .. sourcecode:: js

        {
          "_links": {
            "next": {
              "href": "http://my.app-arena.com/api/v2/projects?page=2"
            },
            "self": {
              "href": "http://my.app-arena.com/api/v2/projects"
            }
          },
          "_embedded": {
            "data": {
              "1": {
                "projectId": 1,
                "name": "Project_1",
                "description": "This is a project description",
                "companyId": 1,
                "_links": {
                  "project": {
                    "href": "http://my.app-arena.com/api/v2/projects/1"
                  },
                  "company": {
                    "href": "http://my.app-arena.com/api/v2/companies/1"
                  }
                }
              },
              "2": {
                "projectId": 2,
                        .
                        .
                        .
              },
                .
                .
                .
              "N":{
                        .
                        .
                        .
              }
            }
          },
          "total_items": 100,
          "page_size": 20,
          "page_count": 5,
          "page_number": 1
        }

GET /projects/:projectId
~~~~~~~~~~~~~~~~~~~~~~~~

    Receive information about a project entity specified by :projectId

|   *Available queries*
|       fields
|       exclude

.. http:response:: Example response body

    .. sourcecode:: js

        {
          "_embedded": {
            "data": {
              "1": {
                "projectId": 1,
                "name": "Project_1 name",
                "description": "This is s project description",
                "companyId": 1,
                "_links": {
                  "project": {
                    "href": "http://my.app-arena.com/api/v2/projects/1"
                  },
                  "company": {
                    "href": "http://my.app-arena.com/api/v2/companies/1"
                  }
                }
              }
            }
          }
        }

POST /projects
~~~~~~~~~~~~~~

    Creates a new project

    .. Note:: When creating a new project, a version '1.0' and the specified language will be created as well.

|   *Available queries*
|       force

.. http:response:: Example request body

    .. sourcecode:: js

        {
            "name"      : "new project",
            "lang"      : "de_DE"
        }

.. http:response:: Example response body

    .. sourcecode:: js

        {
          "status": 201,
          "data": {
            "projectId": 2,
            "companyId": 1,
            "name": "new project",
            "description": null,
            "version": {
              "versionId": 1,
              "projectId": 2,
              "companyId": 1,
              "name": "autogenerated initial version of project 'new project'.",
              "lang": "de_DE",
              "variant": 1,
              "public": false,
              "language": {
                "versionId": 1,
                "lang": "de_DE",
              }
            }
          }
        }

    .. Tip:: You can change the name of the initial version with a PUT request to /projects/:projectId/versions/1.0

    **Required data**

    name
        (string) Name of the project
    lang
        (string) A language code_. Syntax: de_DE for Germany, de_AT for Austrian german, en_US for american english ...

        Used to set the default language of the initial project version.

    **Optional data**

    companyId
        (integer) ID of the owning company, if not specified, app will be owned by the company used for authorization
    description
        (string) A description of the project

.. _code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2

PUT /projects/:projectId
~~~~~~~~~~~~~~~~~~~~~~~~

    Alters an project entry specified by :projectId

|   *Available queries*
|       force

.. http:response:: Example request body

    .. sourcecode:: js

        {
            "name":         "new project name",
            "description":  "This is a new project description"
        }

.. http:response:: Example response body

    .. sourcecode:: js

        {
          "status": 200,
          "data": {
            "projectId": 2,
            "companyId": 1,
            "name": "new project name",
            "description": "This is a new project description"
          }
        }

    **Changeable fields**

    name
        (string)
    companyId
        (integer) changes the owner of the project
    description
        (string)

DELETE /projects/:projectId
~~~~~~~~~~~~~~~~~~~~~~~~~~~

    Deletes an project from the database specified by :projectId

    .. Warning:: This deletes all versions including all contained settings and translations as well!

|   *Available queries*
|       none

.. http:response:: Example response body

    .. sourcecode:: js

        {
          "status": 200,
          "message": "Project '2' deleted."
        }

/projects/:projectId/versions
-----------------------------

GET /projects/:projectId/versions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    Receive information about the versions of a project specified by :project_id

|   *Available queries*
|       page
|       items
|       fields
|       exclude
|       orderasc/orderdesc

.. http:response:: Example response body

    .. sourcecode:: js

        {
          "_links": {
            "self": {
              "href": "http://my.app-arena.com/api/v2/projects/1/versions"
            },
            "next": {
              "href": "http://my.app-arena.com/api/v2/projects/1/versions?page=2"
            },
          },
          "_embedded": {
            "data": {
              "1.0": {
                "versionId": 1,
                "name": "project version 1.0",
                "variant": 1,
                "public": false,
                "lang": "de_DE",
                "companyId": 1,
                "projectId": 1,
                "_links": {
                  "version": {
                    "href": "http://my.app-arena.com/api/v2/projects/1/versions/1.0"
                  },
                  "company": {
                    "href": "http://my.app-arena.com/api/v2/companies/1"
                  },
                  "project": {
                    "href": "http://my.app-arena.com/api/v2/projects/1"
                  }
                }
              },
              "1.1": {
                "versionId": 2,
                        .
                        .
                        .
              },
                .
                .
                .
              "X.Y": {
                        .
                        .
                        .
              }
            }
          },
          "total_items": 10,
          "page_size": 5,
          "page_count": 1,
          "page_number": 1
        }

GET /projects/:projectId/versions/:versionId
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    Receive information about a project version specified by :projectId and :versionId

    .. Note:: Use the version number as :versionId e.g.: GET /projects/1/versions/1.1

|   *Available queries*
|       fields
|       exclude

.. http:response:: Example response body

    .. sourcecode:: js

        {
          "_embedded": {
            "data": {
              "1.1": {
                "versionId": 2,
                "name": "project version 1.1",
                "variant": 1.1,
                "public": false,
                "lang": "de_DE",
                "companyId": 1,
                "projectId": 1,
                "_links": {
                  "version": {
                    "href": "http://manager.local/api/v2/projects/1/versions/1.1"
                  },
                  "company": {
                    "href": "http://manager.local/api/v2/companies/1"
                  },
                  "project": {
                    "href": "http://manager.local/api/v2/projects/1"
                  }
                }
              }
            }
          }
        }

POST /projects/:projectId/versions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    Create a new version for a project, specified by :projectId

    .. Note:: The default language specified in the request body will be created automatically as well!

|   *Available queries*
|       force

.. http:response:: Example request body

    .. sourcecode:: js

        {
            "name"      : "new project version",
            "lang"      : "de_DE"
        }

.. http:response:: Example response body

    .. sourcecode:: js

        {
          "status": 200,
          "data": {
            "versionId": 3,
            "projectId": 1,
            "companyId": 1,
            "name": "new project version",
            "lang": "de_DE",
            "variant": 1.2,
            "public": false,
            "language": {
              "versionId": 3,
              "lang": "de_DE",
            }
          }
        }

    **Required data**

    name
        (string) Name of the template
    lang
        (string) The default language of the template, if left out, the default language of the project is used instead.
        Syntax: de_DE for Germany, de_AT for Austrian german, en_US for american english ...

    **Optional data**

    variant
        (float) The desired version number. If left blank, the version number gets auto incremented.
    public
        (bool) Sets the public status of the version

PUT /projects/:projectId/versions/:versionId
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    Alters the properties of a version, specified by :projectId and :versionId

|   *Available queries*
|       none

.. http:response:: Example request body

    .. sourcecode:: js

        {
            "name"      : "new version name"
        }

.. http:response:: Example response body

    .. sourcecode:: js

        {
          "status": 200,
          "data": {
            "versionId": 3,
            "projectId": 1,
            "companyId": 1,
            "name": "new version name",
            "lang": "de_DE",
            "variant": 1.2,
            "public": false
          }
        }

    **Changeable parameters**

    name
        (string)
    public
        (bool)